1 TypeScript è un linguaggio di programmazione open source sviluppato da Microsoft. Il linguaggio estende la sintassi di JavaScript in modo che qualunque programma scritto in JavaScript sia anche in grado di funzionare con TypeScript senza nessuna modifica. A differenza di JS che è di tipizzazione debole e dinamica, TypeScript è a tipizzazione forte e statica (statica vuol dire che una volta che una variabile, funzione etc. ha un tipo non può essere più cambiato). E' un aiuto per scrivere del javascript più sicuro

2 Il compilatore TS, che essenzialmente converte il nostro file TypeScript in puro JavaScript, è essenziale per far funzionare la nostra web app dato che il browser non è in grado di interpretare TypeScript. Per avviare la conversione bastera da terminale aprire la cartella nella quale è presente il nostro file .ts ed eseguire il comando "tsc nome_file" e verrà generato un file js che conterrà la conversione del nostro codice TypeScript

3 Quando noi inizializziamo una variabile,un parametro, una funzione, un array, un oggetto etc. Typescript cercherà automaticamente, qualora non l'abbiamo fatto manualmente, ad assegnargli un tipo; questo fenomeno viene chiamato "type inference"

4 Il tipo any è un tipo "pericoloso" perchè appunto vuol dire ogni quindi ad esempio una variabile di tipo any può ricevere un valore di qualsiasi tipo(boolean, string, object, array etc.). Sarebbe come scrivere del normale js

5 In typescript è possibile inizializzare variabili con tipi misti attraverso l'operatore "|" in modo tale che accetti più di un solo tipo di valore.
Es: let x: string | number = 'Ciao' ..... x = 3

6 Il costrutto interface consente di definire un tipo di dato la cui struttura viene verificata a tempo di compilazione da TypeScript. In questo modo, quindi, possiamo utilizzare l'interfaccia come se fosse un tipo di dato predefinito, permettendoci tra l'altro di riutilizzarla in più punti della nostra applicazione. La flessibilità delle interfacce di TypeScript si evidenzia nella possibilità di definire una struttura con elementi opzionali

7 Le generics sono uno degli strumenti più potenti e flessibili in TypeScript. Offrono un modo per creare componenti che possono lavorare con una varietà di tipi anziché un singolo tipo. Ciò aggiunge un livello di astrazione e riutilizzabilità nel codice, mantenendo la sicurezza dei tipi. Ad esempio, un Array<T> può essere un array di numeri, stringhe o qualsiasi altro tipo personalizzato, a seconda di come T viene specificato.

